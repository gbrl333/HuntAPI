// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HuntAPI.Migrations
{
    [DbContext(typeof(HuntContext))]
    [Migration("20250326202318_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Models.Hunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokemonKill")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtyCrystal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtyShiny")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpawnId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SpawnId");

                    b.ToTable("Hunts");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarketPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NPCprice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Clan")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Disk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Models.Spawn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shinyid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.HasIndex("Shinyid");

                    b.ToTable("Spawns");
                });

            modelBuilder.Entity("Models.Hunt", b =>
                {
                    b.HasOne("Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.HasOne("Models.Spawn", "Spawn")
                        .WithMany()
                        .HasForeignKey("SpawnId");

                    b.Navigation("Player");

                    b.Navigation("Spawn");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.HasOne("Models.Pokemon", null)
                        .WithMany("Drops")
                        .HasForeignKey("PokemonId");
                });

            modelBuilder.Entity("Models.Spawn", b =>
                {
                    b.HasOne("Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Pokemon", "Shiny")
                        .WithMany()
                        .HasForeignKey("Shinyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Shiny");
                });

            modelBuilder.Entity("Models.Pokemon", b =>
                {
                    b.Navigation("Drops");
                });
#pragma warning restore 612, 618
        }
    }
}
